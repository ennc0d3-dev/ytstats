# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        skip-pkg-cache: true
        skip-build-cache: true
        args: "--timeout=10m"

  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: docker.io
      IMAGE_REPOSITORY: ennc0d3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up version suffix
      id: version
      run: echo "name=0.0.1-$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -cover -coverprofile coverage.out -v ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: unittests
        files: ./coverage.out

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{env.IMAGE_REGISTRY}}/${{env.IMAGE_REPOSITORY}}/ytstats:${{ steps.version.outputs.name }}
